//Primeiro, criou-se uma agregação para recolher os dados relevantes às devoluções, incluindo os cálculos necessários à classificação de uma devolução como precoce.
db.Returns.aggregate([
  {
    $lookup: {
      from: "Product",
      localField: "product_id",
      foreignField: "id",
      as: "productsReturned",
    },
  },
  {
    $lookup: {
      from: "SalesHeader",
      localField: "invoice_id",
      foreignField: "invoice_id",
      as: "sale_data",
    },
  },
  {
    $unwind: "$sale_data",
  },
  {
    $addFields: {
      early_return: {
        $cond: {
          if: {
            $lte: [
              "$date",
              {
                $add: [
                  "$sale_data.date",
                  3 * 24 * 60 * 60 * 1000,
                ], // 3 days in milliseconds
              },
            ],
          },
          then: true,
          else: false,
        },
      },
      days_to_return: {
        $divide: [
          {
            $subtract: [
              "$date",
              "$sale_data.date",
            ],
          },
          24 * 60 * 60 * 1000, // Convert milliseconds to days
        ],
      },
    },
  },
  {
    $out:
      /**
       * Provide the name of the output collection.
       */
      "Returns",
  },
])


//depois, formataram-se os dados relevantes às devoluções
db.Returns.aggregate([
  {
    $project: {
      _id: 1,
      date: 1,
      days_to_return: 1,
      early_return: 1,
      invoice_id: 1,
      "productsReturned.brand": 1,
      "productsReturned.id": 1,
      "productsReturned.list_price": 1,
      "productsReturned.model": 1,
      "productsReturned.sub_categories": 1,
    },
  },
  {
    $out:
      /**
       * Provide the name of the output collection.
       */
      "Returns",
  },
])